---
- name: 'Allow unprivileged processes to listen on port 80 and higher'
  hosts: 'all'
  gather_facts: true
  become: false

  handlers:

    - name: 'Restart the systemd-modules-load.service'
      ansible.builtin.service:
        name: 'systemd-modules-load.service'
        state: 'restarted'
      become: true

    - name: 'Restart the systemd-sysctl.service'
      ansible.builtin.service:
        name: 'systemd-sysctl.service'
        state: 'restarted'
      become: true

  tasks:

    - name: 'Ensure lingering is enabled for the vagrant user'
      ansible.builtin.command:
        cmd: 'loginctl enable-linger vagrant'
        creates: '/var/lib/systemd/linger/vagrant'
      become: true

    - name: 'Create /etc/modules-load.d/ip_tables.conf'
      ansible.builtin.copy:
        dest: '/etc/modules-load.d/ip_tables.conf'
        content: |
          ip_tables
        owner: 'root'
        group: 'root'
        mode: '0644'
      become: true
      notify:
        - 'Restart the systemd-modules-load.service'

    - name: 'Create /etc/sysctl.d/ip_unprivileged_port_start.conf'
      ansible.builtin.copy:
        dest: '/etc/sysctl.d/net.ipv4.ip_unprivileged_port_start.conf'
        content: |
          net.ipv4.ip_unprivileged_port_start=80
        owner: 'root'
        group: 'root'
        mode: '0644'
      become: true
      notify:
        - 'Restart the systemd-sysctl.service'

    - name: 'Create directories in ~/.config'
      ansible.builtin.file:
        state: 'directory'
        path: "{{ item }}"
        owner: 'vagrant'
        group: 'vagrant'
        mode: '0755'
      loop:
        - '~/.config/'
        - '~/.config/containers/'
        - '~/.config/containers/systemd/'
        - '~/.config/systemd/'
        - '~/.config/systemd/user/'

    - name: 'Flush handlers to create directories, if needed'
      ansible.builtin.meta: flush_handlers

    - name: 'Start the podman socket (as unprivileged user)'
      ansible.builtin.systemd:
        name: 'podman.socket'
        state: 'started'
        enabled: true
        scope: 'user'

    - name: 'Create the nginx network'
      containers.podman.podman_network:
        name: nginx
        state: quadlet
        quadlet_options:
          - |
            DisableDNS=false

            [Unit]
            Description=Nginx Podman network

    - name: 'Start the nginx-network service'
      ansible.builtin.systemd:
        name: 'nginx-network.service'
        state: 'started'
        enabled: true
        scope: 'user'
        daemon_reload: true
